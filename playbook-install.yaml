- name: Install ip-per-service
  hosts: all
  vars:
    ip_list_prefix_path: '/usr/local/share/services-ips/'
    script_path: '/usr/sbin/ip-per-service.sh'
    interface: 'eth0'
    auto_add_service_with_interface: true
    dependent_services: ''

  become: true
  tasks:
    - name: Check for existence of services
      ansible.builtin.stat:
        path: "/etc/systemd/system/{{ item }}"
      loop: "{{ dependent_services.split(' ') }}"
      register: service_check
      when: auto_add_service_with_interface
      tags:
        - add_dependency

    - name: Check results and abort if services are missing
      ansible.builtin.fail:
        msg: "Service {{ item.item }} dont exist /etc/systemd/system/"
      when: not item.stat.exists and auto_add_service_with_interface
      loop: "{{ service_check.results }}"
      tags:
        - add_dependency

    - name: Copy script
      ansible.builtin.copy:
        src: ./ip-per-service.sh
        dest: "{{ script_path }}"
        owner: root
        group: root
        mode: u=rwx,g=rx,o=rx

    - name: Copy the systemd service file
      ansible.builtin.template:
        src: ip-per-service@.service.j2
        dest: /etc/systemd/system/ip-per-service@.service
        owner: root
        group: root
        mode: u=rw,g=r,o=r

    - name: Creates directory for lists
      ansible.builtin.file:
        path: '{{ ip_list_prefix_path }}'
        owner: root
        group: root
        mode: u=rw,g=r,o=r
        state: directory

    - name: Create list file
      ansible.builtin.file:
        path: '{{ ip_list_prefix_path }}ips-{{ interface }}.list'
        owner: root
        group: root
        mode: u=rw,g=r,o=r
        state: touch

    - name: Ensure override directory exists
      ansible.builtin.file:
        path: '/etc/systemd/system/{{ item }}.d'
        state: directory
        owner: root
        group: root
        mode: u=rwx,g=rx,o=rx
      loop: "{{ dependent_services.split(' ') }}"
      when: auto_add_service_with_interface

    - name: Create or update Docker override file
      ansible.builtin.copy:
        dest: '/etc/systemd/system/{{ item }}.d/90-ip-per-service-{{ interface }}-dep.conf'
        content: |
          [Unit]
          After=ip-per-service@{{ interface }}.service
          Wants=ip-per-service@{{ interface }}.service
        owner: root
        group: root
        mode: u=rw,g=r,o=r
      loop: "{{ dependent_services.split(' ') }}"
      when: auto_add_service_with_interface


    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Enable and start services
      ansible.builtin.systemd:
        name: ip-per-service@{{ interface }}.service
        enabled: true
        state: started
      when: auto_add_service_with_interface
